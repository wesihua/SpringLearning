<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder location="classpath:app.properties"/>
	<!-- There is usually no need to include the <context:annotation-config> element when using <context:component-scan> -->
	<!-- <context:annotation-config/> -->
	<context:component-scan base-package="com.wei.spring"/>
	
	<!-- 注解的方式实现aop -->
	<!-- <aop:aspectj-autoproxy/> -->
	<!-- xml配置的方式实现aop -->
	<aop:config>
		<!-- 定义一个外层的pointcut -->
		<aop:pointcut expression="execution(* com.wei.spring.mvc..*.insert*(..))" id="insertService"/>
		<aop:aspect id="xmlAop" ref="xmlAspect">
			<aop:before method="testBefore" pointcut-ref="insertService"/>
			<aop:after-returning method="testAfterReturning" pointcut="execution(* com.wei.spring.mvc..*.insert*(..))" returning="ret"/>
			<aop:after method="testAfter" pointcut-ref="insertService"/>
		</aop:aspect>
	</aop:config>
	
	<bean id="xmlAspect" class="com.wei.spring.aop.XmlAspect"></bean>
	
	<mvc:annotation-driven/>
    <mvc:interceptors>
    	<ref bean="myHandlerInterceptor"/>
    </mvc:interceptors>
	
	<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
	    <property name="driverClassName" value="${jdbc.driverClassName}"/>
	    <property name="url" value="${jdbc.url}"/>
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	</bean>
	<bean id="firstBean" class="com.wei.spring.beanTest.FirstBean"/>
    <bean class="com.wei.spring.processor.InstantiaionTracingBeanPostProcessor"/>
	<bean id="resourceLoaderImpl3" class="com.wei.spring.resource.ResourceLoaderImpl3">
		<property name="resource">
			<value>classpath:app.properties</value>
		</property>
	</bean>
	
	<!-- 拦截器配置 与<mvc:interceptors>冲突，这种文档上的配置无效 -->
	<!-- <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="myHandlerInterceptor"/>
            </list>
        </property>
    </bean> -->
	<!-- 拦截器对象 -->
	<bean id="myHandlerInterceptor" class="com.wei.spring.interceptor.HandlerInterceptor"/>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="prefix" value="/jsp"/>
	    <property name="suffix" value=""/>
	    <property name="exposedContextBeanNames">
	        <list><value>properties</value></list>
	    </property>
	</bean>
	<!--使用springMVC自带上传功能时的必须配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <!-- one of the properties available; the maximum file size in bytes -->
	    <property name="maxUploadSize" value="100000"/>
	</bean>
	
</beans>